#pragma once

#include "move.hpp"
#include "types.hpp"

namespace Eval {

constexpr int totalPhase = 24;

struct Info {
    Info() = default;
    int getRawEval() const;
    void addPiece(Square square, pieceTypes piece);
    void removePiece(Square square, pieceTypes piece);

    int opScore = 0;
    int egScore = 0;
    int phase = 0;
};

int getPiecePhase(pieceTypes piece);
int getPlacementScoreOp(Square square, pieceTypes currPiece);
int getPlacementScoreEg(Square square, pieceTypes currPiece);

// opening tables

constexpr std::array<int, BOARD_SIZE> tableKingOp = {
-86, 358, 24, 76, 1317, 517, -465, 35,
267, 94, 288, 172, -130, 133, -247, -317,
-299, 222, -105, 191, 48, 73, 28, 230,
-143, -129, 5, -65, 31, -37, -17, -125,
163, 95, -154, -34, -34, -44, 86, 58,
43, 23, -93, -29, -121, -84, -103, -121,
31, -48, -113, -75, -139, -113, -64, -16,
-54, -48, -28, -99, -36, -98, -1, -4,
};

constexpr std::array<int, BOARD_SIZE> tableQueenOp = {
736, 799, 650, 669, 920, 893, 1042, 902,
730, 728, 685, 731, 688, 913, 772, 825,
675, 687, 766, 775, 722, 823, 808, 742,
740, 675, 714, 751, 747, 774, 759, 749,
731, 671, 704, 722, 710, 689, 789, 774,
682, 725, 727, 715, 719, 733, 776, 808,
624, 682, 719, 742, 735, 696, 755, 771,
737, 626, 686, 723, 703, 580, 563, 828,
};

constexpr std::array<int, BOARD_SIZE> tableBishopOp = {
202, -31, 240, 629, 194, 301, 1160, 217,
285, 272, 316, 284, 224, 326, 244, 234,
273, 335, 297, 314, 347, 381, 313, 297,
324, 285, 349, 355, 314, 339, 275, 288,
272, 287, 267, 318, 314, 274, 264, 285,
269, 301, 295, 293, 271, 290, 278, 295,
287, 282, 315, 267, 277, 281, 300, 206,
-40, 208, 255, 225, 237, 268, 149, 100,
};

constexpr std::array<int, BOARD_SIZE> tableKnightOp = {
48, 332, 281, 185, 559, 179, 511, -72,
310, 295, 322, 254, 246, 339, 211, 305,
232, 248, 310, 353, 404, 422, 287, 379,
282, 255, 329, 282, 307, 283, 285, 401,
229, 320, 289, 262, 307, 292, 268, 257,
241, 261, 277, 289, 250, 271, 280, 230,
179, 182, 222, 258, 253, 251, 236, 223,
21, 255, 185, 206, 238, 274, 225, 242,
};

constexpr std::array<int, BOARD_SIZE> tableRookOp = {
348, 399, 387, 497, 465, 370, 427, 482,
396, 415, 466, 458, 513, 558, 519, 442,
385, 434, 399, 339, 446, 492, 518, 495,
330, 385, 408, 389, 441, 411, 312, 450,
285, 426, 322, 381, 369, 395, 320, 381,
294, 314, 319, 355, 331, 312, 385, 371,
277, 331, 338, 353, 318, 361, 350, 331,
323, 337, 333, 347, 346, 335, 359, 311,
};

constexpr std::array<int, BOARD_SIZE> tablePawnOp = {
0, 0, 0, 0, 0, 0, 0, 0,
142, 122, -107, 109, 314, 75, 145, -55,
25, 21, 75, 153, 93, 39, 95, -23,
13, 15, 29, 41, 89, 78, 47, 34,
7, 28, 21, 44, 50, 32, 68, 33,
8, 30, 27, 18, 42, 50, 89, 39,
3, 20, 11, -4, 41, 51, 97, 27,
0, 0, 0, 0, 0, 0, 0, 0,
};

// Endgame tables

constexpr std::array<int, BOARD_SIZE> tableKingEg = {
-149, -71, 108, -18, -127, -33, 34, -50,
-10, 47, -29, 9, 79, 124, 150, 118,
109, -18, 43, -31, 32, 49, 47, 60,
-29, 59, -12, 10, -3, 11, 51, 23,
-17, -25, 17, 2, 25, 2, -10, -8,
-40, -31, -7, -15, 15, 31, 17, 46,
-51, 11, -13, 5, 16, 7, -0, 21,
45, 26, -24, -15, -46, -13, -47, -36,
};

constexpr std::array<int, BOARD_SIZE> tableQueenEg = {
1082, 1103, 1206, 1214, 1003, 1101, 831, 955,
1059, 1041, 1180, 1214, 1208, 990, 1029, 1048,
1152, 1132, 1142, 1132, 1146, 1169, 1178, 1211,
1048, 1170, 1148, 1115, 1122, 1172, 1142, 1151,
1009, 1220, 1117, 1114, 1117, 1142, 1038, 1076,
1096, 1035, 1075, 1104, 1090, 1090, 1112, 947,
1175, 1129, 1078, 1026, 1007, 1078, 1003, 1076,
1000, 1175, 1139, 993, 1085, 1200, 1121, 936,
};

constexpr std::array<int, BOARD_SIZE> tableBishopEg = {
381, 276, 409, 216, 387, 339, 197, 352,
311, 348, 385, 325, 393, 322, 324, 391,
317, 335, 374, 379, 322, 334, 324, 374,
324, 381, 325, 345, 343, 348, 357, 317,
344, 345, 384, 326, 357, 411, 346, 295,
322, 372, 352, 359, 371, 349, 304, 381,
268, 276, 295, 347, 327, 299, 314, 330,
549, 337, 287, 317, 291, 272, 341, 387,
};

constexpr std::array<int, BOARD_SIZE> tableKnightEg = {
231, 211, 249, 369, 260, 312, 228, 260,
314, 317, 248, 359, 338, 285, 422, 252,
217, 315, 356, 298, 301, 283, 376, 282,
296, 301, 304, 337, 346, 330, 350, 265,
284, 232, 333, 325, 282, 351, 337, 249,
292, 287, 299, 261, 279, 316, 293, 226,
279, 173, 383, 279, 291, 274, 195, 199,
225, 244, 260, 279, 226, 121, 233, 379,
};

constexpr std::array<int, BOARD_SIZE> tableRookEg = {
626, 578, 604, 546, 557, 581, 564, 570,
588, 563, 567, 568, 547, 543, 522, 570,
577, 582, 579, 589, 573, 569, 544, 544,
609, 582, 583, 591, 548, 574, 628, 554,
626, 561, 601, 569, 585, 545, 567, 547,
616, 594, 580, 575, 614, 596, 549, 549,
564, 551, 551, 548, 570, 576, 567, 567,
551, 573, 568, 577, 564, 562, 547, 528,
};

constexpr std::array<int, BOARD_SIZE> tablePawnEg = {
0, 0, 0, 0, 0, 0, 0, 0,
318, 366, 424, 296, 183, 350, 295, 349,
260, 250, 244, 168, 199, 211, 189, 231,
190, 158, 164, 148, 85, 121, 169, 148,
167, 131, 134, 114, 118, 103, 136, 146,
135, 139, 128, 166, 127, 120, 128, 148,
155, 158, 130, 209, 158, 135, 129, 146,
0, 0, 0, 0, 0, 0, 0, 0,
};

extern std::array<std::array<int, BOARD_SIZE>, 6> tablesOp;
extern std::array<std::array<int, BOARD_SIZE>, 6> tablesEg; 

} // namespace eval