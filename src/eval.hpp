#pragma once

#include "move.hpp"
#include "types.hpp"

namespace Eval {

constexpr int totalPhase = 24;

struct Info {
    Info() = default;
    int getRawEval() const;
    void addPiece(Square square, pieceTypes piece);
    void removePiece(Square square, pieceTypes piece);

    int opScore = 0;
    int egScore = 0;
    int phase = 0;
};

int getPiecePhase(pieceTypes piece);
int getPlacementScoreOp(Square square, pieceTypes currPiece);
int getPlacementScoreEg(Square square, pieceTypes currPiece);

// opening tables

constexpr std::array<int, BOARD_SIZE> tableKingOp = {
41, 268, -107, -113, 43, -146, -431, 95,
195, 298, -2, -102, -154, 8, 14, -104,
-327, 256, 10, 38, 6, -81, -63, -52,
-138, -18, 53, -3, 6, -87, -143, -38,
-47, 41, -63, -29, -79, -38, -30, 51,
-16, -15, -20, -43, -120, -29, 30, 11,
129, -1, 67, -6, -14, -7, 70, 109,
160, 123, 90, 22, 70, -2, 130, 134,
};

constexpr std::array<int, BOARD_SIZE> tableQueenOp = {
801, 837, 745, 858, 959, 1036, 957, 836,
758, 755, 767, 855, 782, 961, 827, 807,
739, 754, 795, 834, 810, 896, 850, 845,
789, 738, 769, 810, 838, 838, 811, 799,
786, 741, 752, 784, 764, 810, 819, 821,
726, 782, 782, 777, 789, 788, 820, 802,
766, 762, 778, 802, 793, 796, 810, 737,
766, 709, 768, 784, 784, 715, 679, 724,
};

constexpr std::array<int, BOARD_SIZE> tableBishopOp = {
311, 284, 311, 309, 289, 246, -21, 179,
277, 296, 274, 316, 223, 333, 242, 237,
285, 314, 313, 327, 361, 408, 325, 328,
299, 277, 321, 337, 300, 339, 275, 278,
224, 292, 262, 302, 307, 268, 271, 265,
279, 282, 281, 287, 265, 295, 282, 285,
282, 275, 274, 261, 277, 258, 291, 180,
125, 209, 253, 217, 239, 237, 86, 130,
};

constexpr std::array<int, BOARD_SIZE> tableKnightOp = {
77, 361, 163, 306, 429, 247, 254, -33,
253, 326, 289, 354, 239, 344, 211, 306,
275, 251, 291, 309, 380, 372, 343, 321,
276, 249, 321, 302, 297, 315, 291, 339,
230, 360, 268, 255, 302, 286, 279, 233,
242, 262, 267, 275, 236, 263, 281, 213,
200, 186, 198, 244, 235, 255, 288, 275,
29, 228, 210, 245, 245, 181, 224, 438,
};

constexpr std::array<int, BOARD_SIZE> tableRookOp = {
359, 375, 341, 488, 420, 405, 473, 548,
342, 358, 438, 402, 474, 460, 447, 406,
345, 362, 391, 351, 334, 457, 490, 426,
303, 292, 359, 345, 423, 405, 310, 349,
193, 325, 254, 305, 333, 368, 310, 306,
255, 225, 273, 241, 306, 302, 341, 256,
201, 239, 304, 284, 232, 299, 342, 299,
262, 272, 283, 285, 311, 298, 209, 283,
};

constexpr std::array<int, BOARD_SIZE> tablePawnOp = {
0, 0, 0, 0, 0, 0, 0, 0,
186, 193, 25, 147, 271, 19, 18, 23,
-21, 75, 42, 114, 116, 20, 90, 13,
11, 35, 29, 47, 65, 65, 39, 23,
19, 46, 23, 38, 44, 27, 38, 19,
19, 33, 36, 16, 41, 34, 76, 45,
16, 26, 13, 2, 27, 52, 86, 34,
0, 0, 0, 0, 0, 0, 0, 0,
};

// Endgame tables

constexpr std::array<int, BOARD_SIZE> tableKingEg = {
-128, -89, 15, 58, -81, 51, 49, -27,
-51, -9, 39, 61, 97, 22, 49, 87,
90, 19, 52, 23, 48, 78, 74, 68,
40, 34, 9, 27, 23, 35, 81, 32,
10, 6, 35, 32, 50, 27, 39, 1,
-11, 21, 10, 17, 44, 34, 9, 9,
-55, 24, -10, 17, 15, 8, -13, -33,
-34, -36, -23, -20, -60, -10, -52, -77,
};

constexpr std::array<int, BOARD_SIZE> tableQueenEg = {
1085, 1148, 1181, 1146, 1106, 1064, 1011, 1141,
1134, 1141, 1170, 1201, 1245, 1115, 1140, 1227,
1130, 1142, 1196, 1167, 1223, 1220, 1235, 1216,
1053, 1220, 1192, 1164, 1167, 1203, 1227, 1275,
1063, 1184, 1155, 1195, 1167, 1086, 1144, 1090,
1135, 1083, 1114, 1093, 1106, 1113, 1112, 1127,
1012, 1070, 1111, 1058, 1046, 1032, 1063, 1104,
1079, 1151, 1077, 1010, 1049, 1103, 955, 1080,
};

constexpr std::array<int, BOARD_SIZE> tableBishopEg = {
382, 299, 366, 334, 339, 345, 366, 363,
351, 359, 400, 334, 422, 377, 381, 375,
320, 374, 379, 388, 354, 363, 355, 377,
376, 380, 374, 381, 402, 366, 392, 361,
355, 391, 415, 393, 382, 436, 374, 343,
372, 362, 413, 380, 416, 386, 327, 314,
337, 336, 331, 378, 366, 355, 356, 315,
319, 379, 330, 348, 345, 320, 376, 365,
};

constexpr std::array<int, BOARD_SIZE> tableKnightEg = {
155, 290, 343, 384, 300, 361, 260, 386,
341, 323, 330, 357, 433, 343, 392, 340,
315, 353, 365, 373, 347, 318, 359, 363,
317, 354, 359, 380, 387, 353, 369, 325,
315, 285, 376, 368, 328, 371, 329, 275,
305, 315, 339, 347, 359, 357, 319, 282,
283, 258, 405, 338, 347, 310, 293, 270,
352, 242, 278, 309, 246, 311, 263, 22,
};

constexpr std::array<int, BOARD_SIZE> tableRookEg = {
665, 648, 674, 618, 630, 643, 623, 625,
674, 662, 646, 664, 631, 637, 617, 650,
648, 678, 647, 655, 681, 636, 612, 641,
668, 662, 646, 646, 636, 629, 680, 637,
690, 648, 674, 654, 624, 624, 641, 620,
675, 685, 656, 668, 660, 639, 632, 645,
650, 659, 630, 636, 672, 640, 603, 614,
637, 661, 654, 670, 646, 636, 669, 580,
};

constexpr std::array<int, BOARD_SIZE> tablePawnEg = {
0, 0, 0, 0, 0, 0, 0, 0,
380, 391, 435, 334, 227, 375, 375, 410,
304, 262, 307, 219, 236, 226, 222, 270,
223, 176, 193, 156, 138, 138, 184, 177,
179, 152, 137, 147, 148, 133, 158, 165,
154, 144, 132, 165, 128, 148, 136, 132,
142, 152, 141, 158, 132, 133, 138, 132,
0, 0, 0, 0, 0, 0, 0, 0,
};

extern std::array<std::array<int, BOARD_SIZE>, 6> tablesOp;
extern std::array<std::array<int, BOARD_SIZE>, 6> tablesEg; 

} // namespace eval