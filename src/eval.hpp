#pragma once

#include "move.hpp"
#include "types.hpp"

namespace Eval {

constexpr int totalPhase = 24;

struct Info {
    Info() = default;
    int getRawEval() const;
    void addPiece(Square square, pieceTypes piece);
    void removePiece(Square square, pieceTypes piece);

    int opScore = 0;
    int egScore = 0;
    int phase = 0;
};

int getPiecePhase(pieceTypes piece);
int getPlacementScoreOp(Square square, pieceTypes currPiece);
int getPlacementScoreEg(Square square, pieceTypes currPiece);
void init();

// opening tables

constexpr std::array<int, BOARD_SIZE> tableKingOp = {
    0 , -30, -30, -30, -30, -30, -30, 0 ,
    0 , -30, -30, -30, -30, -30, -30, 0 ,
    0 , -30, -30, -30, -30, -30, -30, 0 ,
    0 , -20, -30, -50, -50, -30, -20, 0 ,
    0 , -20, -30, -50, -50, -30, -20, 0 ,
    0 , -15, -30, -30, -30, -30, -15, 0 ,
    10, -10, -15, -15, -15, -15, -15, 10,
    20, 20, 10, 10 , 10, 10, 20, 20
};

constexpr std::array<int, BOARD_SIZE> tableQueenOp = {
    900, 900, 900, 900, 900, 900, 900, 900,
    900, 900, 900, 901, 901, 900, 900, 900,
    900, 900, 903, 903, 903, 903, 900, 900,
    900, 903, 903, 903, 903, 903, 903, 900,
    900, 903, 903, 903, 903, 903, 903, 900,
    900, 905, 897, 905, 905, 897, 905, 900,
    900, 902, 902, 901, 901, 902, 902, 900,
    891, 896, 896, 902, 902, 896, 896, 891,
};

constexpr std::array<int, BOARD_SIZE> tableBishopOp = {
    280, 290, 295, 295, 295, 295, 290, 280,
    290, 295, 305, 305, 305, 305, 295, 290,
    295, 305, 310, 315, 315, 310, 305, 295,
    295, 305, 310, 315, 315, 310, 305, 295,
    295, 305, 310, 315, 315, 310, 305, 295,
    295, 305, 310, 315, 315, 310, 305, 295,
    290, 310, 305, 305, 305, 305, 310, 290,
    280, 295, 290, 295, 295, 290, 295, 280,
};

constexpr std::array<int, BOARD_SIZE> tableKnightOp = {
    280, 290, 295, 295, 295, 295, 290, 280,
    290, 295, 300, 305, 305, 300, 295, 290,
    295, 305, 315, 315, 315, 315, 305, 295,
    295, 305, 315, 318, 318, 315, 305, 295,
    295, 305, 315, 318, 318, 315, 305, 295,
    295, 305, 315, 315, 315, 315, 305, 295,
    290, 300, 305, 305, 305, 305, 300, 290,
    275, 280, 290, 290, 290, 290, 280, 275,
};

constexpr std::array<int, BOARD_SIZE> tableRookOp = {
    500, 500, 500, 500, 500, 500, 500, 500,
    520, 520, 520, 520, 520, 520, 520, 520,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 505, 505, 505, 505, 505, 505, 500,
    500, 500, 510, 510, 510, 510, 500, 500,
};

constexpr std::array<int, BOARD_SIZE> tablePawnOp = {
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
    120, 120, 125, 130, 130, 125, 120, 120,
    110, 110, 115, 125, 125, 115, 110, 110,
    100, 105, 110, 128, 128, 110, 105, 100,
    100, 100, 106, 119, 119, 106, 100, 100,
    100, 105, 103, 105, 105, 103, 105, 100,
    100, 107, 100, 90, 90, 100 , 107, 100 ,
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
};

// Endgame tables

constexpr std::array<int, BOARD_SIZE> tableKingEg = {
    -20, -15, -7, 0 , 0 , -7, -15, -20,
    -15, -7, 0 , 15 , 15 , 0 , -7, -15,
    0 , 12, 20, 23, 23, 20, 12, 0 ,
    0 , 15, 25, 28, 28, 25, 15, 0 ,
    0 , 15, 25, 28, 28, 25, 15, 0 ,
    -7, 5 , 7 , 15, 15, 7 , 5 , -7,
    -15, -7, 0 , 5 , 5 , 0 , -7, -15,
    -20, -15, -7, 0 , 0 , -7, -15, -20
};

constexpr std::array<int, BOARD_SIZE> tableQueenEg = {
    895, 895, 895, 895, 895, 895, 895, 895,
    895, 900, 900, 900, 900, 900, 900, 895,
    895, 900, 905, 905, 905, 905, 900, 895,
    895, 900, 905, 915, 915, 905, 900, 895,
    895, 900, 905, 915, 915, 905, 900, 895,
    895, 900, 905, 905, 905, 905, 900, 895,
    895, 900, 900, 900, 900, 900, 900, 895,
    895, 895, 895, 895, 895, 895, 895, 895,
};

constexpr std::array<int, BOARD_SIZE> tableBishopEg = {
    290, 293, 295, 295, 295, 295, 293, 290,
    293, 303, 304, 305, 305, 304, 303, 293,
    295, 304, 310, 315, 315, 310, 304, 295,
    295, 305, 315, 315, 315, 315, 305, 295,
    295, 305, 315, 315, 315, 315, 305, 295,
    295, 304, 310, 315, 315, 310, 304, 295,
    293, 303, 304, 305, 305, 304, 303, 293,
    290, 293, 295, 295, 295, 295, 293, 290,
};

constexpr std::array<int, BOARD_SIZE> tableKnightEg = {
    280, 290, 295, 295, 295, 295, 290, 280,
    290, 295, 300, 305, 305, 300, 295, 290,
    295, 305, 315, 315, 315, 315, 305, 295,
    295, 305, 315, 318, 318, 315, 305, 295,
    295, 305, 315, 318, 318, 315, 305, 295,
    295, 305, 315, 315, 315, 315, 305, 295,
    290, 300, 305, 305, 305, 305, 300, 290,
    275, 280, 290, 290, 290, 290, 280, 275,
};

constexpr std::array<int, BOARD_SIZE> tableRookEg = {
    500, 500, 500, 500, 500, 500, 500, 500,
    520, 520, 520, 520, 520, 520, 520, 520,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 500, 500, 500, 500, 500, 500, 500,
    500, 505, 505, 505, 505, 505, 505, 500,
    500, 500, 510, 510, 510, 510, 500, 500,
};

constexpr std::array<int, BOARD_SIZE> tablePawnEg = {
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,
    220, 210, 200, 200, 200, 200, 210, 220,
    180, 175, 171, 171, 171, 171, 175, 180,
    150, 147, 144, 144, 144, 144, 147, 150,
    131, 129, 127, 127, 127, 127, 129, 131,
    112, 111, 110, 110, 110, 110, 111, 112,
    102, 102, 102, 102, 102, 102, 102, 102, 
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
};

extern std::array<std::array<int, BOARD_SIZE>, 6> tablesOp;
extern std::array<std::array<int, BOARD_SIZE>, 6> tablesEg; 

} // namespace eval